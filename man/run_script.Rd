% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_script.R
\name{run_script}
\alias{run_script}
\title{Predict MS^2 fragment spectra from SMILES code.}
\usage{
run_script(
  Name = "Example_0",
  SMILES = "CC1=CC(=O)OC2=CC(OS(O)(=O)=O)=CC=C12",
  Precursor_type = "[M-H]-",
  CE = 17,
  Instrument_type = "HCD",
  min_prob = 0.001,
  annotation = FALSE,
  fiora_script = NULL
)
}
\arguments{
\item{Name}{The compound name.}

\item{SMILES}{The SMILES code of the compound.}

\item{Precursor_type}{Precursor type (currently "[M-H]-" or "[M+H]+").}

\item{CE}{Collision energy.}

\item{Instrument_type}{Instrument type.}

\item{min_prob}{Minimum peak probability to be recorded in the spectrum.}

\item{annotation}{Return SMILES for fragments if TRUE.}

\item{fiora_script}{Path to python script fiora-predict.}
}
\value{
A list with the fiora results for the specified compound.
}
\description{
A wrapper around the python script `fiora-predict` using the
    fiora open source model to generate a MS^2 spectra for a compound with
    known SMILES code.
}
\details{
This wrapper will generate a fiora ready input file (csv-format)
    based on the user parameters which is stored as a temp file. It will
    ensure that the current version of the fiora package is installed in a
    respective python environment. It will use `system2()` to run the python
    script `fiora-predict` and import its result back into R using the
    internal function `read_fiora()`.
    You can try different installed version of `fiora` by providing the path
    the the script explicitly.
}
\examples{
\dontrun{
  run_script()
  # modify parameters and store result
  foo <- run_script("Name" = "Test", min_prob = 0.05)
  # use a different fiora environment/model
  s_pth <- "c:/Users/jlisec/AppData/Local/r-miniconda/envs/fiora-0.1.0/Scripts/fiora-predict"
  foo <- run_script(fiora_script = s_pth)
}

}
